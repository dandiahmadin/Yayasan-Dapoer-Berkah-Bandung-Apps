/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.dapoerberkahbandung.view;

import id.dapoerberkahbandung.controller.KebutuhanController;
import id.dapoerberkahbandung.database.Koneksi;
import id.dapoerberkahbandung.entity.Kebutuhan;
import id.dapoerberkahbandung.error.KebutuhanException;
import id.dapoerberkahbandung.event.KebutuhanListener;
import id.dapoerberkahbandung.model.KebutuhanModel;
import id.dapoerberkahbandung.model.TabelKebutuhanModel;
import id.dapoerberkahbandung.service.KebutuhanDao;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
/**
 *
 * @author Alfi Nurizkya
 */
public class KebutuhanView extends javax.swing.JPanel implements KebutuhanListener, ListSelectionListener {

    /**
     * Creates new form DonaturView
     */
    
    private TabelKebutuhanModel tabelKebutuhanModel;
    private KebutuhanModel model;
    private KebutuhanController controller;
    
    
    public KebutuhanView() throws SQLException {
        initComponents();
        tabelKebutuhanModel = new TabelKebutuhanModel();
        model = new KebutuhanModel();
        controller = new KebutuhanController();
        
        tabelKebutuhan.setModel(tabelKebutuhanModel);
        tabelKebutuhan.getSelectionModel().addListSelectionListener(this);
        model.setKebutuhanListener(this);
        controller.setModel(model);
        
        
        model.resetKebutuhan();
    }

    public JTable getTabelKebutuhan() {
        return tabelKebutuhan;
    }

    public JTextField getTxtIdKebutuhan() {
        return txtIdKebutuhan;
    }

    public JTextField getTxtNamaKebutuhan() {
        return txtNamaKebutuhan;
    }
  
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataKebutuhan = new javax.swing.JLabel();
        idKebutuhan = new javax.swing.JLabel();
        kebutuhan = new javax.swing.JLabel();
        txtIdKebutuhan = new javax.swing.JTextField();
        txtNamaKebutuhan = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelKebutuhan = new javax.swing.JTable();
        btnReset = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();

        setBackground(new java.awt.Color(250, 245, 224));
        setPreferredSize(new java.awt.Dimension(600, 480));

        dataKebutuhan.setFont(new java.awt.Font("Century Gothic", 1, 26)); // NOI18N
        dataKebutuhan.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataKebutuhan.setText("Data Kebutuhan");

        idKebutuhan.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        idKebutuhan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idKebutuhan.setText("ID Kebutuhan :");

        kebutuhan.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        kebutuhan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        kebutuhan.setText("Kebutuhan :");

        txtIdKebutuhan.setEditable(false);
        txtIdKebutuhan.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        txtIdKebutuhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdKebutuhanActionPerformed(evt);
            }
        });

        txtNamaKebutuhan.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        txtNamaKebutuhan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNamaKebutuhanActionPerformed(evt);
            }
        });

        tabelKebutuhan.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabelKebutuhan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        jScrollPane1.setViewportView(tabelKebutuhan);

        btnReset.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnTambah.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dataKebutuhan, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(65, 65, 65)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(kebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(idKebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtIdKebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNamaKebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(223, 223, 223)
                .addComponent(btnReset)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnTambah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnUbah)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnHapus)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(dataKebutuhan)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idKebutuhan)
                    .addComponent(txtIdKebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(kebutuhan)
                    .addComponent(txtNamaKebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnTambah)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdKebutuhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdKebutuhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdKebutuhanActionPerformed

    private void txtNamaKebutuhanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNamaKebutuhanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNamaKebutuhanActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        try {
            controller.resetKebutuhan(this);
        } catch (SQLException ex) {
            Logger.getLogger(KebutuhanView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        controller.insertKebutuhan(this);
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        controller.updateKebutuhan(this);
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        controller.deleteKebutuhan(this);
    }//GEN-LAST:event_btnHapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JLabel dataKebutuhan;
    private javax.swing.JLabel idKebutuhan;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel kebutuhan;
    private javax.swing.JTable tabelKebutuhan;
    private javax.swing.JTextField txtIdKebutuhan;
    private javax.swing.JTextField txtNamaKebutuhan;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onChange(KebutuhanModel kebutuhan) {
        txtIdKebutuhan.setText(model.getId_kebutuhan());
        txtNamaKebutuhan.setText(model.getNama_kebutuhan());
    }

    @Override
    public void onInsert(Kebutuhan kebutuhan) {
        tabelKebutuhanModel.add(kebutuhan);
    }

    @Override
    public void onUpdate(Kebutuhan kebutuhan) {
        int index = tabelKebutuhan.getSelectedRow();
        tabelKebutuhanModel.set(index, kebutuhan);
    }

    @Override
    public void onDelete() {
        int index = tabelKebutuhan.getSelectedRow();
        tabelKebutuhanModel.remove(index);
    }

    @Override
    public void valueChanged(ListSelectionEvent lse) {
        try {
            Kebutuhan model = tabelKebutuhanModel.get(tabelKebutuhan.getSelectedRow());
            txtIdKebutuhan.setText(model.getId_kebutuhan());
            txtNamaKebutuhan.setText(model.getNama_kebutuhan());
                        
        } catch (IndexOutOfBoundsException ex) {
        }
    }
    
    public void loadDatabase() throws SQLException, KebutuhanException {
        KebutuhanDao dao = Koneksi.getKebutuhanDao();
        tabelKebutuhanModel.setList(dao.selectAllKebutuhan());
    }

}