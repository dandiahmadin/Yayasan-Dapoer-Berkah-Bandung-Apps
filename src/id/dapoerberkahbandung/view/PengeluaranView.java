/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package id.dapoerberkahbandung.view;

import com.toedter.calendar.JDateChooser;
import id.dapoerberkahbandung.controller.PengeluaranController;
import id.dapoerberkahbandung.database.Koneksi;
import id.dapoerberkahbandung.entity.Anggota;
import id.dapoerberkahbandung.entity.Kebutuhan;
import id.dapoerberkahbandung.entity.Pengeluaran;
import id.dapoerberkahbandung.error.AnggotaException;
import id.dapoerberkahbandung.error.KebutuhanException;
import id.dapoerberkahbandung.error.PengeluaranException;
import id.dapoerberkahbandung.event.PengeluaranListener;
import id.dapoerberkahbandung.model.PengeluaranModel;
import id.dapoerberkahbandung.model.TabelPengeluaranModel;
import id.dapoerberkahbandung.service.PengeluaranDao;
import java.sql.SQLException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Alfi Nurizkya
 */
public class PengeluaranView extends javax.swing.JPanel implements PengeluaranListener, ListSelectionListener {

    /**
     * Creates new form PengeluaranView
     */
    
    private TabelPengeluaranModel tabelPengeluaranModel;
    private PengeluaranModel model;
    private PengeluaranController controller;
    
    public PengeluaranView() {
        initComponents();
        tabelPengeluaranModel = new TabelPengeluaranModel();
        model = new PengeluaranModel();
        controller = new PengeluaranController();
        
        model.setListener(this);
        controller.setModel(model);
        tabelPengeluaran.getSelectionModel().addListSelectionListener(this);
        tabelPengeluaran.setModel(tabelPengeluaranModel);
        model.resetPengeluaran();
    }

    public JTable getTabelPengeluaran() {
        return tabelPengeluaran;
    }

    public JDateChooser getDateChooser() {
        return dateChooser;
    }

    public JComboBox<String> getComboBoxAnggota() {
        return comboBoxAnggota;
    }

    public JComboBox<String> getComboBoxKebutuhan() {
        return comboBoxKebutuhan;
    }
    
    public JTextField getTxtNoPengeluaran() {
        return txtNoPengeluaran;
    }

    public JTextField getTxtRekening() {
        return txtRekening;
    }

    public JTextField getTxtUangTunai() {
        return txtUangTunai;
    }

    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        dataPengeluaran = new javax.swing.JLabel();
        idNoPengeluaran = new javax.swing.JLabel();
        txtNoPengeluaran = new javax.swing.JTextField();
        idAnggota1 = new javax.swing.JLabel();
        dateChooser = new com.toedter.calendar.JDateChooser();
        idAnggota = new javax.swing.JLabel();
        idKebutuhan = new javax.swing.JLabel();
        idRekening = new javax.swing.JLabel();
        txtRekening = new javax.swing.JTextField();
        idUangTunai = new javax.swing.JLabel();
        txtUangTunai = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabelPengeluaran = new javax.swing.JTable();
        btnReset = new javax.swing.JButton();
        btnTambah = new javax.swing.JButton();
        btnUbah = new javax.swing.JButton();
        btnHapus = new javax.swing.JButton();
        comboBoxAnggota = new javax.swing.JComboBox<>();
        comboBoxKebutuhan = new javax.swing.JComboBox<>();

        setBackground(new java.awt.Color(250, 245, 224));

        dataPengeluaran.setFont(new java.awt.Font("Century Gothic", 1, 26)); // NOI18N
        dataPengeluaran.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dataPengeluaran.setText("Data Pengeluaran");

        idNoPengeluaran.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        idNoPengeluaran.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idNoPengeluaran.setText("Nomor Pengeluaran :");

        txtNoPengeluaran.setEditable(false);
        txtNoPengeluaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoPengeluaranActionPerformed(evt);
            }
        });

        idAnggota1.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        idAnggota1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idAnggota1.setText("Tanggal :");

        dateChooser.setDateFormatString("dd MMMM yyyy");
        dateChooser.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N

        idAnggota.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        idAnggota.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idAnggota.setText("Anggota :");

        idKebutuhan.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        idKebutuhan.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idKebutuhan.setText("Kebutuhan :");

        idRekening.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        idRekening.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idRekening.setText("Rekening :");

        txtRekening.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        txtRekening.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRekeningActionPerformed(evt);
            }
        });

        idUangTunai.setFont(new java.awt.Font("Century Gothic", 1, 14)); // NOI18N
        idUangTunai.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        idUangTunai.setText("Uang Tunai :");

        txtUangTunai.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        txtUangTunai.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtUangTunaiActionPerformed(evt);
            }
        });

        tabelPengeluaran.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        tabelPengeluaran.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ));
        jScrollPane1.setViewportView(tabelPengeluaran);

        btnReset.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnTambah.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnTambah.setText("Tambah");
        btnTambah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTambahActionPerformed(evt);
            }
        });

        btnUbah.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnUbah.setText("Ubah");
        btnUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUbahActionPerformed(evt);
            }
        });

        btnHapus.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        btnHapus.setText("Hapus");
        btnHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnHapusActionPerformed(evt);
            }
        });

        comboBoxAnggota.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        comboBoxAnggota.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        comboBoxKebutuhan.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        comboBoxKebutuhan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(dataPengeluaran, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idUangTunai, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnReset)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnTambah)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnUbah)
                                        .addGap(18, 18, 18)
                                        .addComponent(btnHapus))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(txtUangTunai, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(idNoPengeluaran)
                                    .addComponent(idAnggota1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idAnggota, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idKebutuhan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNoPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboBoxAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboBoxKebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(idRekening, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtRekening, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(dataPengeluaran)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(idNoPengeluaran)
                            .addComponent(txtNoPengeluaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(7, 7, 7)
                        .addComponent(idAnggota1))
                    .addComponent(dateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idAnggota)
                    .addComponent(comboBoxAnggota, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idKebutuhan)
                    .addComponent(comboBoxKebutuhan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idRekening)
                    .addComponent(txtRekening, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(idUangTunai)
                    .addComponent(txtUangTunai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnReset)
                    .addComponent(btnTambah)
                    .addComponent(btnUbah)
                    .addComponent(btnHapus))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 154, Short.MAX_VALUE)
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtNoPengeluaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoPengeluaranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoPengeluaranActionPerformed

    private void txtRekeningActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRekeningActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRekeningActionPerformed

    private void txtUangTunaiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtUangTunaiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtUangTunaiActionPerformed

    private void btnTambahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTambahActionPerformed
        // TODO add your handling code here:
        controller.insertPengeluaran(this);
        comboBoxAnggota.setSelectedIndex(0);
        comboBoxKebutuhan.setSelectedIndex(0);
    }//GEN-LAST:event_btnTambahActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        controller.resetPengeluaran(this);
        comboBoxAnggota.setSelectedIndex(0);
        comboBoxKebutuhan.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUbahActionPerformed
        // TODO add your handling code here:
        controller.updatePengeluaran(this);
        comboBoxAnggota.setSelectedIndex(0);
        comboBoxKebutuhan.setSelectedIndex(0);
    }//GEN-LAST:event_btnUbahActionPerformed

    private void btnHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnHapusActionPerformed
        // TODO add your handling code here:
        controller.deletePengeluaran(this);
        comboBoxAnggota.setSelectedIndex(0);
        comboBoxKebutuhan.setSelectedIndex(0);
    }//GEN-LAST:event_btnHapusActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHapus;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnTambah;
    private javax.swing.JButton btnUbah;
    private javax.swing.JComboBox<String> comboBoxAnggota;
    private javax.swing.JComboBox<String> comboBoxKebutuhan;
    private javax.swing.JLabel dataPengeluaran;
    private com.toedter.calendar.JDateChooser dateChooser;
    private javax.swing.JLabel idAnggota;
    private javax.swing.JLabel idAnggota1;
    private javax.swing.JLabel idKebutuhan;
    private javax.swing.JLabel idNoPengeluaran;
    private javax.swing.JLabel idRekening;
    private javax.swing.JLabel idUangTunai;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tabelPengeluaran;
    private javax.swing.JTextField txtNoPengeluaran;
    private javax.swing.JTextField txtRekening;
    private javax.swing.JTextField txtUangTunai;
    // End of variables declaration//GEN-END:variables

    @Override
    public void onChange(PengeluaranModel model) {
        txtNoPengeluaran.setText(model.getNo_pengeluaran()+ "");
        dateChooser.setDate(model.getTanggal());
        comboBoxAnggota.setSelectedItem(model.getId_anggota());
        comboBoxKebutuhan.setSelectedItem(model.getId_kebutuhan());
        txtRekening.setText(String.valueOf(model.getRekening()));
        txtUangTunai.setText(String.valueOf(model.getUang_tunai()));
    }

    @Override
    public void onInsert(Pengeluaran pengeluaran) {
        tabelPengeluaranModel.add(pengeluaran);
        try {
            loadDatabase();
        } catch (SQLException | PengeluaranException | AnggotaException | KebutuhanException ex) {
            Logger.getLogger(PengeluaranView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void onUpdate(Pengeluaran pengeluaran) {
        int index = tabelPengeluaran.getSelectedRow();
        tabelPengeluaranModel.set(index, pengeluaran);
        try {
            loadDatabase();
        } catch (SQLException | PengeluaranException | AnggotaException | KebutuhanException ex) {
            Logger.getLogger(PengeluaranView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void onDelete() {
        int index = tabelPengeluaran.getSelectedRow();
        tabelPengeluaranModel.remove(index);
        try {
            loadDatabase();
        } catch (SQLException | PengeluaranException | AnggotaException | KebutuhanException ex) {
            Logger.getLogger(PengeluaranView.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    @Override
    public void valueChanged(ListSelectionEvent lse) {
        try {
            Pengeluaran model = tabelPengeluaranModel.get(tabelPengeluaran.getSelectedRow());
            txtNoPengeluaran.setText(model.getNo_pengeluaran() + "");
            dateChooser.setDate(model.getTanggal());
            comboBoxAnggota.setSelectedItem(model.getId_anggota());
            comboBoxKebutuhan.setSelectedItem(model.getId_kebutuhan());
            txtRekening.setText(model.getRekening()+ "");
            txtUangTunai.setText(model.getUang_tunai()+ "");
       } catch (IndexOutOfBoundsException e) {
        }
    }
    
    public void loadDatabase() throws SQLException, PengeluaranException, AnggotaException, KebutuhanException {
        PengeluaranDao dao = Koneksi.getPengeluaranDao();
        tabelPengeluaranModel.setList(dao.selectAllPengeluaran());
        
        comboBoxAnggota.removeAllItems();
        comboBoxKebutuhan.removeAllItems();
        
        comboBoxAnggota.addItem("~ Pilih ~");
        comboBoxKebutuhan.addItem("~ Pilih ~");
        
        List<Anggota> id_anggota = dao.selectNameAnggota();
        for (Anggota id : id_anggota) {
            comboBoxAnggota.addItem(String.valueOf(id.getNama()));
        }

        List<Kebutuhan> id_kebutuhan = dao.selectNameKebutuhan();
        for (Kebutuhan id : id_kebutuhan) {
            comboBoxKebutuhan.addItem(String.valueOf(id.getNama_kebutuhan()));
        }
        
    }
}
